{"version":3,"sources":["helpers/fontAwesome.js","helpers/context.js","default-text/text.js","components/toolbar.js","components/editor.js","components/previewer.js","components/blockContainer.js","App.js","index.js"],"names":["library","add","faCompressAlt","faExpandArrowsAlt","faFreeCodeCamp","Context","React","createContext","defaultText","Toolbar","props","useContext","FontAwesomeIcon","isEditorExpanded","isPreviewerExpanded","handleShrink","handleExpand","className","icon","title","id","onClick","Editor","handleChange","textInput","Fragment","style","height","defaultValue","onChange","Previewer","markdownText","dangerouslySetInnerHTML","__html","BlockContainer","marked","require","App","state","bind","event","this","setState","target","value","toLowerCase","Provider","Component","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.7245e1a4.chunk.js","sourcesContent":["import { library } from \"@fortawesome/fontawesome-svg-core\";\r\n\r\nimport {\r\n  faCompressAlt,\r\n  faExpandArrowsAlt\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { faFreeCodeCamp } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nlibrary.add(faCompressAlt, faExpandArrowsAlt, faFreeCodeCamp);\r\n","import React from \"react\";\r\n\r\nconst Context = React.createContext();\r\n\r\nexport default Context;\r\n","let defaultText = `# Welcome to my React Markdown Previewer!\r\n\r\n## This is a sub-heading...\r\n### And here's some other cool stuff:\r\n  \r\nHeres some code, \\`<div></div>\\`, between 2 backticks.\r\n\r\n\\`\\`\\`\r\n// this is multi-line code:\r\n\r\nfunction anotherExample(firstLine, lastLine) {\r\n  if (firstLine == \\'\\`\\`\\`\\' && lastLine == \\'\\`\\`\\`\\') {\r\n    return multiLineCode;\r\n  }\r\n}\r\n\\`\\`\\`\r\n  \r\nYou can also make text **bold**... whoa!\r\nOr _italic_.\r\nOr... wait for it... **_both!_**\r\nAnd feel free to go crazy ~~crossing stuff out~~.\r\n\r\nThere's also [links](https://www.freecodecamp.com), and\r\n> Block Quotes!\r\n\r\nAnd if you want to get really crazy, even tables:\r\n\r\nWild Header | Crazy Header | Another Header?\r\n------------ | ------------- | ------------- \r\nYour content can | be here, and it | can be here....\r\nAnd here. | Okay. | I think we get it.\r\n\r\n- And of course there are lists.\r\n  - Some are bulleted.\r\n     - With different indentation levels.\r\n        - That look like this.\r\n\r\n\r\n1. And there are numbererd lists too.\r\n1. Use just 1s if you want! \r\n1. But the list goes on...\r\n- Even if you use dashes or asterisks.\r\n* And last but not least, let's not forget embedded images:\r\n\r\n![React Logo w/ Text](https://i.imgur.com/ow9mzRV.png)`;\r\n\r\nexport { defaultText };\r\n","import React, { useContext } from \"react\";\r\n\r\nimport Context from \"../helpers/context\";\r\n\r\nexport default function Toolbar(props) {\r\n  const {\r\n    FontAwesomeIcon,\r\n    isEditorExpanded,\r\n    isPreviewerExpanded,\r\n    handleShrink,\r\n    handleExpand\r\n  } = useContext(Context);\r\n\r\n  return (\r\n    <div className=\"toolbar\">\r\n      <div className=\"toolbar-title\">\r\n        <FontAwesomeIcon icon={[\"fab\", \"free-code-camp\"]} /> {props.title}\r\n      </div>\r\n      {isEditorExpanded || isPreviewerExpanded ? (\r\n        <FontAwesomeIcon\r\n          icon={[\"fas\", \"compress-alt\"]}\r\n          id={props.title}\r\n          onClick={handleShrink}\r\n          className=\"button\"\r\n        />\r\n      ) : (\r\n        <FontAwesomeIcon\r\n          icon={[\"fas\", \"expand-arrows-alt\"]}\r\n          id={props.title}\r\n          onClick={handleExpand}\r\n          className=\"button\"\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\n\r\nimport Context from \"../helpers/context\";\r\n\r\nimport Toolbar from \"./toolbar\";\r\n\r\nexport default function Editor(props) {\r\n  const {\r\n    handleChange,\r\n    isEditorExpanded,\r\n    isPreviewerExpanded,\r\n    textInput\r\n  } = useContext(Context);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {isEditorExpanded && !isPreviewerExpanded ? (\r\n        <div\r\n          id=\"editor-block\"\r\n          className=\"block-expanded\"\r\n          style={{ height: \"100vh\" }}\r\n        >\r\n          <Toolbar title=\"Editor\" />\r\n\r\n          <textarea\r\n            id=\"editor\"\r\n            defaultValue={textInput}\r\n            onChange={handleChange}\r\n            style={{ height: \"100%\" }}\r\n          />\r\n        </div>\r\n      ) : !isEditorExpanded && isPreviewerExpanded ? (\r\n        <React.Fragment />\r\n      ) : (\r\n        <div id=\"editor-block\" className=\"block-default\">\r\n          <Toolbar title=\"Editor\" />\r\n\r\n          <textarea\r\n            id=\"editor\"\r\n            defaultValue={textInput}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\n\r\nimport Context from \"../helpers/context\";\r\n\r\nimport Toolbar from \"./toolbar\";\r\n\r\nexport default function Previewer(props) {\r\n  const { isEditorExpanded, markdownText } = useContext(Context);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {!isEditorExpanded ? (\r\n        <div id=\"previewer-block\" className=\"block-expanded\">\r\n          <Toolbar title=\"Previewer\" />\r\n\r\n          <div\r\n            id=\"preview\"\r\n            dangerouslySetInnerHTML={{ __html: markdownText }}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <React.Fragment />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport Editor from \"./editor\";\r\nimport Previewer from \"./previewer\";\r\n\r\nexport default function BlockContainer() {\r\n  return (\r\n    <div id=\"block-container\">\r\n      <Editor />\r\n      <Previewer />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport \"./helpers/fontAwesome\";\nimport \"./styles/main.scss\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport Context from \"./helpers/context\";\nimport { defaultText } from \"./default-text/text\";\n\nimport BlockContainer from \"./components/blockContainer\";\n\nconst marked = require(\"marked\");\n\nexport default class App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      textInput: defaultText,\n      markdownText: marked(defaultText),\n      isEditorExpanded: false,\n      isPreviewerExpanded: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleExpand = this.handleExpand.bind(this);\n    this.handleShrink = this.handleShrink.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      textInput: event.target.value,\n      markdownText: marked(event.target.value)\n    });\n  }\n\n  handleExpand(event) {\n    const blockName = event.target.id.toLowerCase();\n    blockName === \"editor\"\n      ? this.setState({\n          isEditorExpanded: true,\n          isPreviewerExpanded: false\n        })\n      : this.setState({\n          isEditorExpanded: false,\n          isPreviewerExpanded: true\n        });\n  }\n\n  handleShrink() {\n    this.setState({\n      isEditorExpanded: false,\n      isPreviewerExpanded: false\n    });\n  }\n\n  render() {\n    let handleChange = this.handleChange;\n    let handleExpand = this.handleExpand;\n    let handleShrink = this.handleShrink;\n    let isEditorExpanded = this.state.isEditorExpanded;\n    let isPreviewerExpanded = this.state.isPreviewerExpanded;\n    let markdownText = this.state.markdownText;\n    let textInput = this.state.textInput;\n\n    return (\n      <Context.Provider\n        value={{\n          FontAwesomeIcon,\n          handleChange,\n          handleExpand,\n          handleShrink,\n          isEditorExpanded,\n          isPreviewerExpanded,\n          markdownText,\n          textInput\n        }}\n      >\n        <div id=\"main-window\">\n          <BlockContainer />\n        </div>\n      </Context.Provider>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}